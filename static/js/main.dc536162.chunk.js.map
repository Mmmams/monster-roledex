{"version":3,"sources":["components/card-item/card-item-component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","changeHandler","type","onChange","App","state","searchField","fetch","then","Response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAIaA,G,kBAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,YAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHbC,EAAW,SAACR,GACrB,OACA,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNdM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,cACxC,OACA,uBACAZ,UAAU,aACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuBKG,E,kDA1Bb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,SAAW,GACXS,YAAc,IAJL,E,gEAOO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAACC,GAAD,OAAYA,EAASC,UAC1BF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAACf,SAAWc,S,+BAEnC,IAAD,SAC0BE,KAAKR,MAA9BR,EADD,EACCA,SAAUS,EADX,EACWA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAEpD,OACE,sBAAK3B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,cAAe,SAACiB,GAAK,EAAKN,SAAS,CAACN,YAAcY,EAAEC,OAAOC,WACnG,cAAC,EAAD,CAAUvB,SAAUiB,W,GAtBLO,aCMJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc536162.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './card-item.css'\r\n\r\nexport const Card = (props) =>{\r\n    return(\r\n        <div className='card-item'>\r\n        <img alt='moster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './card-list.css';\r\n\r\nimport {Card} from '../card-item/card-item-component'\r\n\r\nexport const CardList = (props) => {\r\n    return(\r\n    <div className='card-list'>\r\n    {props.monsters.map(monster=>(\r\n        <Card key={monster.id} monster={monster}/>\r\n       ))}\r\n    </div>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport './search-box.css'\r\n\r\nexport const SearchBox = ({placeholder, changeHandler}) =>{\r\nreturn(\r\n<input\r\nclassName='search-box'\r\ntype='search'\r\nplaceholder={placeholder}\r\nonChange={changeHandler}\r\n/>\r\n)\r\n\r\n}","import React, {Component} from 'react'\n\nimport './App.css';\n\nimport {CardList} from './components/card-list/card-list-component.jsx'\nimport {SearchBox} from './components/search-box/search-box.component.jsx'\nclass  App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchField : '',\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((Response)=>Response.json())\n    .then((users)=> this.setState({monsters : users}));\n  }\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n  return (\n    <div className=\"App\">\n    <h1>Monster Roledex</h1>\n    <SearchBox placeholder='search monster' changeHandler={(e)=>{this.setState({searchField : e.target.value})}}/>\n    <CardList monsters={filteredMonsters}/>\n    </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}